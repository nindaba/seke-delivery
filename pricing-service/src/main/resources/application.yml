spring:
  application.name: Pricing-Service
  mvc.servlet.path: /pricing
  profiles.include: price-config

  cassandra:
    schema-action: recreate
    local-datacenter: datacenter1
    keyspace-name: pricing_1_0

    connection:
      connect-timeout: 10s
      init-query-timeout: 10s
    contact-points:
      - localhost

  data.redis:
    host: localhost
    port: 6379
  cache:
    redis.time-to-live: 360000
    cache-names: ${config.price-cache-name}
    type: redis

  kafka:
    bootstrap-servers: localhost:9092
    admin.auto-create: true
    producer:
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      bootstrap-servers: ${spring.kafka.bootstrap-servers}
      properties:
        spring.json.trusted.packages: bi.seke.schema
    consumer:
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      bootstrap-servers: ${spring.kafka.bootstrap-servers}
      group-id: ${spring.application.name}
      properties:
        spring.json.trusted.packages: bi.seke.schema

config:
  pricing-configs-cache-name: PricingConfigurations
  pricing-topic-name: PricingTopic
  package-topic-name: PackageTopic
  route-topic-name: RouteTopic
  pricing-topic-clean-policy: compact,delete
